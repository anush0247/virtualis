package com.aakash.vlabs.quiz;

import android.app.Fragment;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;

public class Question extends Fragment {
	
	int currentId = 1;
	
	String Gift_qn = "";
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		//return super.onCreateView(inflater, container, savedInstanceState);
		
		View view = inflater.inflate(R.layout.question, container, false);
		LinearLayout qun_layout = (LinearLayout) view.findViewById(R.id.myquestions_page);
		TextView mytext = new TextView(view.getContext());
		mytext.setText("Question "+ currentId + "\n" + Gift_qn);
		mytext.setPadding(20, 20, 20, 20);
		mytext.setTextSize(20);
		qun_layout.addView(mytext);
		return view;
	}
	
	public void setId(int id){
		this.currentId = id;
	}
	
	public void setGift_qn(String str){
		this.Gift_qn = str;
	}
	
	public String[] parseQuestion(){
		// take the question string and returns array containing string array
		// 0 - type , 1 - title, 2 - question , 3 - answer string
		return null;
	}
	
	
	public String[] parseQuestion() {
		// take the question string and returns array containing string array
				// 0 - type , 1 - title, 2 - question , 3 - answer string
		q = this.Gift_qn;
		String arr1[] = new String[4];
		if (q.contains("{")) {
			int v = q.indexOf('{');
			char v2 = q.charAt(++v);
			switch (v2) {
			case '#':
				arr1 = makeparts("Numeric", q);
				break;
			case '~':
				if (q.contains("=")) {
					arr1 = makeparts("Multiple", q);
				} else {
					arr1 = makeparts("Multiple_many", q);
				}
				break;
			case '}':
				arr1 = makeparts("Essay", q);
				break;
			case 't':
			case 'T':
			case 'F':
			case 'f':
				arr1 = makeparts("True_false", q);
				break;
			case '=':
			case '\n':
				if (q.contains("~")) {
					if (q.contains("=")) {
						arr1 = makeparts("Multiple", q);
					} else {
						arr1 = makeparts("Multiple_many", q);
					}
				} else if (q.contains("->")) {
					arr1 = makeparts("Matching", q);
				} else {
					arr1 = makeparts("Short_Answer", q);
				}
				break;
			default:
				arr1 = makeparts("Missing_word", q);
			}
		} else {
			if (q.contains("//")) {
				arr1 = makeparts("Comment", q);
			} else {
				arr1 = makeparts("Description", q);
			}
		}
		return arr1;
	}

	public String[] makeparts(String type, String s) {
		int v = s.indexOf('{');
		int v1 = s.indexOf('}');
		int v2 = s.indexOf(':', 2);
		String title = (String) s.subSequence(0, v);
		String question = (String) s.subSequence(0, v);
		String answerpart = (String) s.subSequence(v + 1, v1);
		if (s.startsWith("::")) {
			title = (String) s.subSequence(2, v2);
			v2 = v2 + 2;
			question = (String) s.subSequence(v2, v);
		}
		v1++;
		if (v1 != s.length() && s.charAt(v1) != '.') {
			question += "__________";
			question += s.subSequence(v1, s.length());
		}
		String ar[] = new String[4];
		ar[0] = type;
		ar[1] = title;
		ar[2] = question;
		ar[3] = answerpart;
		return ar;
	}


}
